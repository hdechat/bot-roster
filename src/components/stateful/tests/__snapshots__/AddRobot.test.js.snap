// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddRobot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddRobot
    addRobotToTeam={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label
          htmlFor="category"
>
          Starter or Sub
</label>,
        <select
          id="category"
          name="category"
          onChange={[Function]}
          required={true}
          value=""
>
          <option
                    value=""
          >
                    Select a Category
          </option>
          <option
                    value="starters"
          >
                    starters
          </option>
          <option
                    value="subs"
          >
                    subs
          </option>
</select>,
        <div
          className="robot-data"
>
          <label
                    htmlFor="first-name"
          >
                    First Name
          </label>
          <input
                    id="first-name"
                    minLength="2"
                    name="firstName"
                    onChange={[Function]}
                    placeholder="first name"
                    required={true}
                    value=""
          />
          <label
                    htmlFor="last-name"
          >
                    Last Name
          </label>
          <input
                    id="last-name"
                    minLength="2"
                    name="lastName"
                    onChange={[Function]}
                    placeholder="last name"
                    required={true}
                    value=""
          />
          <label
                    htmlFor="speed"
          >
                    Speed
          </label>
          <input
                    id="speed"
                    name="speed"
                    onChange={[Function]}
                    pattern="[0-9]"
                    type="number"
                    value={0}
          />
          <label
                    htmlFor="strength"
          >
                    Strength
          </label>
          <input
                    id="strength"
                    name="strength"
                    onChange={[Function]}
                    pattern="[0-9]"
                    type="number"
                    value={0}
          />
          <label
                    htmlFor="agility"
          >
                    Agility
          </label>
          <input
                    id="agility"
                    name="agility"
                    onChange={[Function]}
                    pattern="[0-9]"
                    type="number"
                    value={0}
          />
          <button
                    type="submit"
          >
                    Add Robot To Team
          </button>
</div>,
      ],
      "className": "AddRobot",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Starter or Sub",
          "htmlFor": "category",
        },
        "ref": null,
        "rendered": "Starter or Sub",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <option
              value=""
>
              Select a Category
</option>,
            <option
              value="starters"
>
              starters
</option>,
            <option
              value="subs"
>
              subs
</option>,
          ],
          "id": "category",
          "name": "category",
          "onChange": [Function],
          "required": true,
          "value": "",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Select a Category",
              "value": "",
            },
            "ref": null,
            "rendered": "Select a Category",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "starters",
              "value": "starters",
            },
            "ref": null,
            "rendered": "starters",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "subs",
              "value": "subs",
            },
            "ref": null,
            "rendered": "subs",
            "type": "option",
          },
        ],
        "type": "select",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor="first-name"
>
              First Name
</label>,
            <input
              id="first-name"
              minLength="2"
              name="firstName"
              onChange={[Function]}
              placeholder="first name"
              required={true}
              value=""
/>,
            <label
              htmlFor="last-name"
>
              Last Name
</label>,
            <input
              id="last-name"
              minLength="2"
              name="lastName"
              onChange={[Function]}
              placeholder="last name"
              required={true}
              value=""
/>,
            <label
              htmlFor="speed"
>
              Speed
</label>,
            <input
              id="speed"
              name="speed"
              onChange={[Function]}
              pattern="[0-9]"
              type="number"
              value={0}
/>,
            <label
              htmlFor="strength"
>
              Strength
</label>,
            <input
              id="strength"
              name="strength"
              onChange={[Function]}
              pattern="[0-9]"
              type="number"
              value={0}
/>,
            <label
              htmlFor="agility"
>
              Agility
</label>,
            <input
              id="agility"
              name="agility"
              onChange={[Function]}
              pattern="[0-9]"
              type="number"
              value={0}
/>,
            <button
              type="submit"
>
              Add Robot To Team
</button>,
          ],
          "className": "robot-data",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "First Name",
              "htmlFor": "first-name",
            },
            "ref": null,
            "rendered": "First Name",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "first-name",
              "minLength": "2",
              "name": "firstName",
              "onChange": [Function],
              "placeholder": "first name",
              "required": true,
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Last Name",
              "htmlFor": "last-name",
            },
            "ref": null,
            "rendered": "Last Name",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "last-name",
              "minLength": "2",
              "name": "lastName",
              "onChange": [Function],
              "placeholder": "last name",
              "required": true,
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Speed",
              "htmlFor": "speed",
            },
            "ref": null,
            "rendered": "Speed",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "speed",
              "name": "speed",
              "onChange": [Function],
              "pattern": "[0-9]",
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Strength",
              "htmlFor": "strength",
            },
            "ref": null,
            "rendered": "Strength",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "strength",
              "name": "strength",
              "onChange": [Function],
              "pattern": "[0-9]",
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Agility",
              "htmlFor": "agility",
            },
            "ref": null,
            "rendered": "Agility",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "agility",
              "name": "agility",
              "onChange": [Function],
              "pattern": "[0-9]",
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Add Robot To Team",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Add Robot To Team",
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="category"
>
            Starter or Sub
</label>,
          <select
            id="category"
            name="category"
            onChange={[Function]}
            required={true}
            value=""
>
            <option
                        value=""
            >
                        Select a Category
            </option>
            <option
                        value="starters"
            >
                        starters
            </option>
            <option
                        value="subs"
            >
                        subs
            </option>
</select>,
          <div
            className="robot-data"
>
            <label
                        htmlFor="first-name"
            >
                        First Name
            </label>
            <input
                        id="first-name"
                        minLength="2"
                        name="firstName"
                        onChange={[Function]}
                        placeholder="first name"
                        required={true}
                        value=""
            />
            <label
                        htmlFor="last-name"
            >
                        Last Name
            </label>
            <input
                        id="last-name"
                        minLength="2"
                        name="lastName"
                        onChange={[Function]}
                        placeholder="last name"
                        required={true}
                        value=""
            />
            <label
                        htmlFor="speed"
            >
                        Speed
            </label>
            <input
                        id="speed"
                        name="speed"
                        onChange={[Function]}
                        pattern="[0-9]"
                        type="number"
                        value={0}
            />
            <label
                        htmlFor="strength"
            >
                        Strength
            </label>
            <input
                        id="strength"
                        name="strength"
                        onChange={[Function]}
                        pattern="[0-9]"
                        type="number"
                        value={0}
            />
            <label
                        htmlFor="agility"
            >
                        Agility
            </label>
            <input
                        id="agility"
                        name="agility"
                        onChange={[Function]}
                        pattern="[0-9]"
                        type="number"
                        value={0}
            />
            <button
                        type="submit"
            >
                        Add Robot To Team
            </button>
</div>,
        ],
        "className": "AddRobot",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Starter or Sub",
            "htmlFor": "category",
          },
          "ref": null,
          "rendered": "Starter or Sub",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option
                value=""
>
                Select a Category
</option>,
              <option
                value="starters"
>
                starters
</option>,
              <option
                value="subs"
>
                subs
</option>,
            ],
            "id": "category",
            "name": "category",
            "onChange": [Function],
            "required": true,
            "value": "",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Select a Category",
                "value": "",
              },
              "ref": null,
              "rendered": "Select a Category",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "starters",
                "value": "starters",
              },
              "ref": null,
              "rendered": "starters",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "subs",
                "value": "subs",
              },
              "ref": null,
              "rendered": "subs",
              "type": "option",
            },
          ],
          "type": "select",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                htmlFor="first-name"
>
                First Name
</label>,
              <input
                id="first-name"
                minLength="2"
                name="firstName"
                onChange={[Function]}
                placeholder="first name"
                required={true}
                value=""
/>,
              <label
                htmlFor="last-name"
>
                Last Name
</label>,
              <input
                id="last-name"
                minLength="2"
                name="lastName"
                onChange={[Function]}
                placeholder="last name"
                required={true}
                value=""
/>,
              <label
                htmlFor="speed"
>
                Speed
</label>,
              <input
                id="speed"
                name="speed"
                onChange={[Function]}
                pattern="[0-9]"
                type="number"
                value={0}
/>,
              <label
                htmlFor="strength"
>
                Strength
</label>,
              <input
                id="strength"
                name="strength"
                onChange={[Function]}
                pattern="[0-9]"
                type="number"
                value={0}
/>,
              <label
                htmlFor="agility"
>
                Agility
</label>,
              <input
                id="agility"
                name="agility"
                onChange={[Function]}
                pattern="[0-9]"
                type="number"
                value={0}
/>,
              <button
                type="submit"
>
                Add Robot To Team
</button>,
            ],
            "className": "robot-data",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "First Name",
                "htmlFor": "first-name",
              },
              "ref": null,
              "rendered": "First Name",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "first-name",
                "minLength": "2",
                "name": "firstName",
                "onChange": [Function],
                "placeholder": "first name",
                "required": true,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Last Name",
                "htmlFor": "last-name",
              },
              "ref": null,
              "rendered": "Last Name",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "last-name",
                "minLength": "2",
                "name": "lastName",
                "onChange": [Function],
                "placeholder": "last name",
                "required": true,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Speed",
                "htmlFor": "speed",
              },
              "ref": null,
              "rendered": "Speed",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "speed",
                "name": "speed",
                "onChange": [Function],
                "pattern": "[0-9]",
                "type": "number",
                "value": 0,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Strength",
                "htmlFor": "strength",
              },
              "ref": null,
              "rendered": "Strength",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "strength",
                "name": "strength",
                "onChange": [Function],
                "pattern": "[0-9]",
                "type": "number",
                "value": 0,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Agility",
                "htmlFor": "agility",
              },
              "ref": null,
              "rendered": "Agility",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "agility",
                "name": "agility",
                "onChange": [Function],
                "pattern": "[0-9]",
                "type": "number",
                "value": 0,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add Robot To Team",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Add Robot To Team",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
