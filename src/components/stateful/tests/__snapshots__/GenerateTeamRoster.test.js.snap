// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenerateTeamRoster matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GenerateTeamRoster
    addTeamRoster={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <input
          onChange={[Function]}
          placeholder="Team Name"
          required={true}
          value=""
/>,
        <button
          className="submit-roster"
          onClick={[Function]}
>
          Submit Team Roster
</button>,
        <p
          className="error-message"
/>,
        <AddRobot
          addRobotToTeam={[Function]}
/>,
        <Roster
          team={
                    Object {
                              "error": "",
                              "starters": Array [],
                              "subs": Array [],
                              "teamName": "",
                            }
          }
/>,
      ],
      "className": "GenerateTeamRoster",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "onChange": [Function],
          "placeholder": "Team Name",
          "required": true,
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Submit Team Roster",
          "className": "submit-roster",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Submit Team Roster",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "",
          "className": "error-message",
        },
        "ref": null,
        "rendered": "",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "addRobotToTeam": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "team": Object {
            "error": "",
            "starters": Array [],
            "subs": Array [],
            "teamName": "",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            onChange={[Function]}
            placeholder="Team Name"
            required={true}
            value=""
/>,
          <button
            className="submit-roster"
            onClick={[Function]}
>
            Submit Team Roster
</button>,
          <p
            className="error-message"
/>,
          <AddRobot
            addRobotToTeam={[Function]}
/>,
          <Roster
            team={
                        Object {
                                    "error": "",
                                    "starters": Array [],
                                    "subs": Array [],
                                    "teamName": "",
                                  }
            }
/>,
        ],
        "className": "GenerateTeamRoster",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onChange": [Function],
            "placeholder": "Team Name",
            "required": true,
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Submit Team Roster",
            "className": "submit-roster",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Submit Team Roster",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "className": "error-message",
          },
          "ref": null,
          "rendered": "",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "addRobotToTeam": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "team": Object {
              "error": "",
              "starters": Array [],
              "subs": Array [],
              "teamName": "",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
